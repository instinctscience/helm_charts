apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "phoenix-app.fullname" . }}
  labels:
    app: {{ template "phoenix-app.name" . }}
    chart: {{ template "phoenix-app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "phoenix-app.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "phoenix-app.name" . }}
        release: {{ .Release.Name }}
        # role: service
    spec:
      serviceAccountName: "endpoint-lookup"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: APP_HOST
              value: "{{ .Values.app.host }}"
            - name: APP_PORT
              value: "{{ .Values.app.port }}"
            - name: DATABASE_URL
              value: "{{ .Values.app.dbUrl }}"
            - name: AUTH0_DOMAIN
              value: "{{ .Values.app.auth0Domain }}"
            - name: AUTH0_CLIENT_ID
              value: "{{ .Values.app.auth0ClientId }}"
            - name: AUTH0_CLIENT_SECRET
              value: "{{ .Values.app.auth0ClientSecret }}"
            - name: SECRET_KEY_BASE
              value: "{{ .Values.app.secretKeyBase }}"
            - name: DM_EMAIL_FROM
              value: "{{ .Values.app.dmEmailFrom }}"
            - name: DM_SEEDER_QA_ENABLED
              value: "{{ .Values.app.dmSeederQAEnabled }}"
            - name: DM_SEEDER_MINIMAL_ENABLED
              value: "{{ .Values.app.dmSeederMinimalEnabled }}"
            - name: DM_ROOT_ENABLED
              value: "{{ .Values.app.dmRootEnabled }}"
            - name: DM_RX_CODE_BASE_LENGTH
              value: "{{ .Values.app.dmRxCodeBaseLength }}"
            - name: SMTP_HOSTNAME
              value: "{{ .Values.app.smtpHostname }}"
            - name: SMTP_USERNAME
              value: "{{ .Values.app.smtpUsername }}"
            - name: SMTP_PASSWORD
              value: "{{ .Values.app.smtpPassword }}"

          ports:
            - containerPort: {{ .Values.app.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.app.port }}
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.app.port }}
            initialDelaySeconds: 20
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
